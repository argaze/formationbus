@page "/"
@using System.Timers;
@using System.Text.Json;
@using System.Text;
@inject ISolarPanelFactory SolarPanelFactory;
@inject IHttpClientFactory HttpClientFactory;
@inject IConfiguration Configuration;

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <button class="btn btn-primary" @onclick="Start">Start</button>
            <button class="btn btn-danger" @onclick="Stop">Stop</button>
            <button class="btn btn-warning" @onclick="Reset">Reset</button>
        </div>
    </div>

    @if (solarPanels != null)
    {
        <div class="row mt-3">
            <div class="col-md-12">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Serial Number</th>
                            <th>Model</th>
                            <th>Capacity</th>
                            <th>Manufacturer</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var solarPanel in solarPanels)
                        {
                            <tr>
                                <td>@solarPanel.SerialNumber</td>
                                <td>@solarPanel.Model</td>
                                <td>@solarPanel.Capacity</td>                 
                                <td>@solarPanel.Manufacturer</td>  
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    private List<SolarPanel> solarPanels = new();
    private System.Timers.Timer timer = new();

    private HttpClient httpClient;
    private string urlFunction;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        timer.Interval = 5000;
        timer.Elapsed += async (object? sender, ElapsedEventArgs e) => await GenerateAndAddSolarPanel();
        urlFunction = Configuration["UrlFunction"] ?? "http://localhost:7072/api/SauvergarderDansBus";
    }
    
    private void Start()
    {        
    // Add this line
    httpClient = HttpClientFactory.CreateClient();
    timer.Enabled = true;
    timer.Start();  
    }

    private void Stop()
    {
        timer.Enabled = false;
        timer.Stop();
    }    

    private void Reset()
    {
        this.Stop();
        solarPanels.Clear();
    }

    private async Task GenerateAndAddSolarPanel()
    {
            var solarPanel = SolarPanelFactory.GenerateSolarPanel();
            solarPanels.Add(solarPanel);
            await InvokeAsync(StateHasChanged);

            // We simulate a bug in the system ;) we sent twice the same solar panel with the
            // same Serial Number
            for (int i = 0; i < 2; i++)
            {

                var request = new HttpRequestMessage()
                {
                    Method = HttpMethod.Post,
                    RequestUri = new Uri(urlFunction)
                };

                request.Content = new StringContent(JsonSerializer.Serialize(solarPanel), Encoding.UTF8, "application/json");
                var response = await httpClient.SendAsync(request);

                // To Something here
                if (!response.IsSuccessStatusCode)
                {

                }
            }
    }
}